name: Build and Publish
on:
  workflow_dispatch:
permissions:
  contents: write
  discussions: write
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BEFORE_BUILD: "pip install -U pip"
      CIBW_ENVIRONMENT: "PATH=/home/runner/.cargo/bin:${PATH}"
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "/home/runner/.cargo/bin" >> $GITHUB_PATH

      - name: Create Virtual Environment and Install Dependencies
        if: matrix.os == 'ubuntu-20.04'
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Add rust to ENV
        if: matrix.os == 'ubuntu-20.04'
        run: echo "PATH=$PATH:/home/runner/.cargo/bin" >> $GITHUB_ENV
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Set up Environment
        run: echo "CIBW_SKIP=pp36-* pp37-* pp38-* pp39-* pp310-*" >> $GITHUB_ENV
      - name: Debug Rust
        run: |
          which rustc
          rustc --version
      - name: Ensure pip is installed
        if: matrix.os == 'ubuntu-20.04'
        run: |
          python -m pip --version
          python -m pip install wheel
      - name: Install cryptography
        if: matrix.os == 'ubuntu-20.04'
        run: python -m pip install cryptography
      - name: Check cryptography
        if: matrix.os == 'ubuntu-20.04'
        run: |
          pip install pipdeptree
          pipdeptree | grep -E 'cryptography|pyOpenSSL|service-identity'
      - name: Activate Virtual Environment (Ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: source venv/bin/activate
      - name: Check ENV
        if: matrix.os == 'ubuntu-20.04'
        run: echo $PATH
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
  Release:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Please read the [CHANGELOG](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/main/CHANGELOG.md) for further information.
          discussion_category_name: releases
          draft: false
          files: | 
            dist/*.tar.gz
            dist/*.whl
          generate_release_notes: true
          name: unicorn-binance-websocket-api
          prerelease: false
          tag_name: 1.46.3
          token: ${{ secrets.RELEASE_TOKEN }}
